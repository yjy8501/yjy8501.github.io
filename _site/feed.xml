<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2023-04-19T22:45:31+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Rakugaki</title><subtitle>개발 낙서장 &amp; 일상</subtitle><author><name>양재용</name><email>yjy850146@gmail.com</email></author><entry><title type="html">코드스테이츠 백엔드 7일차 회고록</title><link href="http://localhost:4000/memoir/SEB_BE7/" rel="alternate" type="text/html" title="코드스테이츠 백엔드 7일차 회고록" /><published>2023-04-19T00:00:00+09:00</published><updated>2023-04-19T00:00:00+09:00</updated><id>http://localhost:4000/memoir/SEB_BE7</id><content type="html" xml:base="http://localhost:4000/memoir/SEB_BE7/"><![CDATA[<style> 
    p { line-height : 1.75em; }
</style>

<h1 id="-배운점"><font color="#A0D7EF"> 배운점</font></h1>

<h2 id="1-반복문"><font color="#A0D7EF">1. 반복문</font></h2>
<blockquote>
  <p>코드들이 반복적으로 실행되도록 할 때 사용된다</p>
</blockquote>

<h3 id="for문"><font color="#A0D7EF">for문</font></h3>
<hr />

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>

    <span class="k">for</span><span class="o">(</span><span class="cm">/*초기화; 조건식; 증감식*/</span><span class="o">)</span> <span class="o">{</span>
      <span class="c1">// 반복 실행될 구문</span>

    <span class="o">}</span>
  <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>
<ul>
  <li>for문은 조건식이 참인 동안 주어진 횟수만큼 실행문을 수행한다(수행횟수를 알 때)</li>
  <li>초기화는 for문이 시작 할 때 최초 한번만 수행된다</li>
  <li>조건식 안의 값이 true면 실행하고 false면 반복문을 종료한다</li>
  <li>증감식은 반복 횟수를 결정한다<br /></li>
</ul>

<h3 id="향상된-for문enhanced-for문"><font color="#A0D7EF">향상된 for문(Enhanced for문)</font></h3>
<hr />

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
    <span class="kt">int</span><span class="o">[]</span> <span class="n">num</span> <span class="o">=</span> <span class="o">{</span><span class="mi">1</span><span class="o">,</span> <span class="mi">2</span><span class="o">,</span> <span class="mi">3</span><span class="o">,</span> <span class="mi">4</span><span class="o">,</span> <span class="mi">5</span><span class="o">};</span>

    <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">elements</span> <span class="o">:</span> <span class="n">num</span><span class="o">)</span> <span class="o">{</span>
      <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">elements</span><span class="o">);</span>

    <span class="o">}</span>
  <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>
<ul>
  <li>컬랙션 객체를 처리할 목적으로는 향상된 for문을 사용한다</li>
  <li>위 코드는 num안에 있는 요소들을 출력하는 코드이다</li>
</ul>

<h3 id="while문"><font color="#A0D7EF">while문</font></h3>
<hr />

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
    <span class="kt">int</span> <span class="n">cnt</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>

    <span class="k">while</span><span class="o">(</span><span class="n">조건식</span><span class="o">)</span> <span class="o">{</span>
      <span class="c1">// 조건이 참일 경우 실행될 구문</span>
      <span class="n">cnt</span><span class="o">++</span> <span class="c1">// 증감식</span>
    <span class="o">}</span>
  <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<ul>
  <li>while문은 조건식이 true일 경우 무한히 반복한다</li>
  <li>정해진 횟수가 없을 때 사용하기 좋다</li>
  <li>while문을 탈출하기 위한 코드를 꼭 작성해야한다</li>
</ul>

<h3 id="-break문과-continue문"><font color="#A0D7EF"> break문과 continue문</font></h3>
<hr />

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
  <span class="k">for</span><span class="o">(</span><span class="cm">/*초기화; 조건식; 증감식*/</span><span class="o">)</span> <span class="o">{</span>
      <span class="k">if</span><span class="o">(</span><span class="cm">/*조건식*/</span><span class="o">)</span> <span class="k">break</span><span class="o">;</span>
      <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="cm">/*조건식*/</span><span class="o">)</span> <span class="k">continue</span><span class="o">;</span>
      <span class="c1">// 반복 실행될 구문</span>

    <span class="o">}</span>
  <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>
<ul>
  <li>break문은 가까운 반복문을 탈출할 때 사용한다</li>
  <li>continue문은 다음 반복으로 넘어갈 때 사용한다</li>
</ul>

<p><br /></p>

<h1 id="-응용-문제"><font color="#A0D7EF"> 응용 문제</font></h1>
<hr />

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.io.BufferedReader</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.IOException</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.InputStreamReader</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">recurrenceRelation</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">IOException</span> <span class="o">{</span>

        <span class="nc">BufferedReader</span> <span class="n">bf</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="nc">InputStreamReader</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">));</span>

        <span class="kt">int</span> <span class="n">n</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">bf</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>

        <span class="kt">long</span><span class="o">[]</span> <span class="n">dp</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">long</span><span class="o">[</span><span class="mi">36</span><span class="o">];</span>

        <span class="n">dp</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
        <span class="n">dp</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>

        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">2</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">36</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="n">i</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
                <span class="n">dp</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">+=</span> <span class="n">dp</span><span class="o">[</span><span class="n">j</span><span class="o">]</span> <span class="o">*</span> <span class="n">dp</span><span class="o">[</span><span class="n">i</span> <span class="o">-</span> <span class="mi">1</span> <span class="o">-</span> <span class="n">j</span><span class="o">];</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">dp</span><span class="o">[</span><span class="n">n</span><span class="o">]);</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>
<p>다이나믹 프로그래밍 알고리즘 문제 <a href="https://www.acmicpc.net/problem/13699">백준_점화식</a>
<br /><br /></p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.util.Scanner</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">pascal_Triangle</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">Scanner</span> <span class="n">sc</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Scanner</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>

        <span class="kt">int</span> <span class="n">n</span> <span class="o">=</span> <span class="n">sc</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
        <span class="kt">int</span> <span class="n">k</span> <span class="o">=</span> <span class="n">sc</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>

        <span class="kt">int</span><span class="o">[][]</span> <span class="n">square</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">n</span><span class="o">][</span><span class="n">n</span><span class="o">];</span>

        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">n</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="n">square</span><span class="o">[</span><span class="mi">0</span><span class="o">][</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
            <span class="n">square</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">0</span><span class="o">]</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
        <span class="o">}</span>

        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">n</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="n">n</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
                <span class="n">square</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">]</span> <span class="o">=</span> <span class="n">square</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">-</span><span class="mi">1</span><span class="o">]</span> <span class="o">+</span> <span class="n">square</span><span class="o">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="o">][</span><span class="n">j</span><span class="o">];</span>
            <span class="o">}</span>
        <span class="o">}</span>

        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">n</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="k">if</span><span class="o">(</span><span class="n">i</span> <span class="o">==</span> <span class="n">k</span> <span class="o">-</span> <span class="mi">1</span><span class="o">)</span> <span class="o">{</span>
                <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">square</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">n</span> <span class="o">-</span> <span class="mi">1</span> <span class="o">-</span> <span class="n">i</span><span class="o">]);</span>
            <span class="o">}</span>
        <span class="o">}</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>
<p>다이나믹 프로그래밍 알고리즘 <a href="https://www.acmicpc.net/problem/16395">백준_파스칼의 삼각형</a><br />
이와 같이 반복문은 자주 쓰이는 문법이다
<br /><br /></p>

<h1 id="-느낀점"><font color="#A0D7EF"> 느낀점</font></h1>
<hr />

<p>오늘은 이론 공부보다는 실습 공부를 더 많이 한 것 같다.<br /><br />
다른 메소드의 사용 없이 순수 for문 만으로 문제를 푸는건 오랜만이라서<br />
생각보다 문제를 푸는데 시간이 걸렸던 것 같다.<br /><br />
그래도 코틀린 문제를 풀 때는 다음에 어떤 문제가 나올지 기대되서<br />
푸는 재미가 있는 것 같다!!<br /><br />
오늘 복습하는 시간보다 알고리즘 문제를 푸는데 시간이 더 많이 쓰인 것 같지만<br />
이것 또한 반복문을 숙달하기 위한 과정이라고,,, 생,, 생각한다!!!<br /><br />
매일 백준 2문제, 공부, TIL 블로그 작성 등 생각보다 할 일이 많다,,,<br />
나중에 프로젝트 시작하면 몸이 남아나질 않을 것 같은 느낌이,,,,!!<br /><br />
그래도 날 부러트리지 못하는 시련은 날 더 강하게 만들 뿐이다!!</p>]]></content><author><name>양재용</name><email>yjy850146@gmail.com</email></author><category term="Memoir" /><category term="Codestates" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">코드스테이츠 백엔드 6일차 회고록</title><link href="http://localhost:4000/memoir/SEB_BE6/" rel="alternate" type="text/html" title="코드스테이츠 백엔드 6일차 회고록" /><published>2023-04-18T00:00:00+09:00</published><updated>2023-04-18T00:00:00+09:00</updated><id>http://localhost:4000/memoir/SEB_BE6</id><content type="html" xml:base="http://localhost:4000/memoir/SEB_BE6/"><![CDATA[<style> 
    p { line-height : 1.75em; }
</style>

<h1 id="-배운점"><font color="#A0D7EF"> 배운점</font></h1>

<h2 id="1-연산자operator"><font color="#A0D7EF">1. 연산자(Operator)</font></h2>
<blockquote>
  <p>하나의 값 또는 여려 개의 값을 피연산자로 하여 새로운 값을 만들어내는 기호</p>
</blockquote>

<h3 id="산술-연산자"><font color="#A0D7EF">산술 연산자</font></h3>
<hr />

<ul>
  <li>덧셈 연산자(+)
    <ul>
      <li>두 항의 값을 더한 값을 반환한다</li>
    </ul>
  </li>
  <li>뺄셈 연산자(-)
    <ul>
      <li>좌항의 값에서 우항의 값을 뺀 값을 반환한다</li>
    </ul>
  </li>
  <li>곱셈 연산자(*)
    <ul>
      <li>두 항의 값을 곱한 값을 반환한다</li>
    </ul>
  </li>
  <li>나눗셈 연산자(/)
    <ul>
      <li>좌항을 우항으로 나눈 값을 반환한다</li>
    </ul>
  </li>
  <li>나머지 연산자(%)
    <ul>
      <li>좌항의 값을 우항의 값으로 나눈 나머지를 반환한다</li>
    </ul>
  </li>
  <li>증감 연산자(++, –)
    <ul>
      <li>변수를 1만큼의 값을 증감한다.</li>
    </ul>
  </li>
  <li>복합 대입 연산자(+=, -=, *=, /=, %=)
    <ul>
      <li>변수에 우항의 값만큼 연산한다</li>
    </ul>
  </li>
</ul>

<h3 id="비교-연산자"><font color="#A0D7EF">비교 연산자</font></h3>
<hr />

<ul>
  <li>대소 비교 연산자(&gt;, &lt;, &gt;=, &lt;&gt;=)
    <ul>
      <li>좌항과 우항을 비교하여 true 또는 false값을 반환한다</li>
    </ul>
  </li>
  <li>등가 비교 연산자(==, !=)
    <ul>
      <li>좌항과 우항이 동등 또는 다름에 따라 true 또는 false값을 반환한다</li>
    </ul>
  </li>
</ul>

<h3 id="논리-연산자"><font color="#A0D7EF">논리 연산자</font></h3>
<hr />

<ul>
  <li>논리 연산자(&amp;&amp;, ||, !)
    <ul>
      <li>And 연산자(&amp;&amp;)는 두 피연산자중에 하나라도 true가 아니면 false를 반환한다</li>
      <li>OR 연산자(||)는 두 피연산자중 하나라도 true면 true를 반환한다</li>
      <li>NOT 연산자(!)는 ture와 false를 반대로 바꿔준다</li>
    </ul>
  </li>
</ul>

<p class="notice--danger">각 연산자는 우선순위가 있기 때문에 순서에 맞게 작성해야한다.</p>

<h2 id="2-조건문"><font color="#A0D7EF">2. 조건문</font></h2>
<blockquote>
  <p>조건에 따라 실행이 달라지게 할 때 사용되는 문장이다</p>
</blockquote>

<h3 id="if문"><font color="#A0D7EF">If문</font></h3>
<hr />

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">if</span><span class="o">(</span><span class="n">조건문</span><span class="o">)</span> <span class="o">{</span>
  <span class="c1">// 조건이 참일 경우 실행 될 코드;</span>
<span class="o">}</span>
<span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">조건문</span><span class="o">)</span> <span class="o">{</span>
  <span class="c1">// 조건이 참일 경우 실행 될 코드;</span>
<span class="o">}</span>
<span class="k">else</span> <span class="o">{</span>
  <span class="c1">// 앞선 조건을 제외한 나머지 경우가 실행 될 코드;</span>
<span class="o">}</span>
</code></pre></div></div>
<p>흐름은 위에서 아래로 순차적으로 일어난다</p>

<h3 id="switch문"><font color="#A0D7EF">Switch문</font></h3>
<hr />

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">switch</span><span class="o">(</span><span class="n">변수</span><span class="o">)</span> <span class="o">{</span>
  <span class="k">case</span> <span class="n">조건1</span> <span class="o">:</span> <span class="c1">// 조건이 참일 때 실행 될 코드</span>
  <span class="k">case</span> <span class="n">조건2</span> <span class="o">:</span> <span class="c1">// 조건이 참일 때 실행 될 코드</span>
  <span class="k">case</span> <span class="n">조건3</span> <span class="o">:</span> <span class="c1">// 조건이 참일 때 실행 될 코드</span>
  <span class="k">case</span> <span class="n">조건4</span> <span class="o">:</span> <span class="c1">// 조건이 참일 때 실행 될 코드</span>
  <span class="k">case</span> <span class="n">조건5</span> <span class="o">:</span> <span class="c1">// 조건이 참일 때 실행 될 코드</span>
  <span class="k">default</span> <span class="o">:</span> <span class="c1">// 앞선 조건에 부합되지 않는 경우</span>

<span class="o">}</span>
</code></pre></div></div>
<p>Switch문 또한 위에서 아래로 순차적으로 일어난다</p>

<p class="notice--danger">break문을 작성하지 않는다면 순차적으로 밑에 있는 조건들을 실행한다</p>

<p><br /></p>
<h1 id="-느낀점"><font color="#A0D7EF"> 느낀점</font></h1>
<hr />

<p>오늘은 코딩의 기본 조건문을 배웠다.<br />
Switch문은 자주 써보지 않아서 오늘 익숙해지는 시간을 배운 것 같다.<br /><br />
강화된 Switch문을 자바 14버전부터 지원한다는데 딱히 쓰일 일이 있나 생각이들었다.<br />
개념 자체는 이미 다 아는거라서 공부하는데 많은 시간이 걸리지 않았지만<br />
코플릿을 푸는 재미가 쏠쏠해서 좋은 것 같다.<br /></p>]]></content><author><name>양재용</name><email>yjy850146@gmail.com</email></author><category term="Memoir" /><category term="Codestates" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">코드스테이츠 백엔드 5일차 회고록</title><link href="http://localhost:4000/memoir/SEB_BE5/" rel="alternate" type="text/html" title="코드스테이츠 백엔드 5일차 회고록" /><published>2023-04-17T00:00:00+09:00</published><updated>2023-04-17T00:00:00+09:00</updated><id>http://localhost:4000/memoir/SEB_BE5</id><content type="html" xml:base="http://localhost:4000/memoir/SEB_BE5/"><![CDATA[<style> 
    p { line-height : 1.75em; }
</style>

<h1 id="-배운점"><font color="#A0D7EF"> 배운점</font></h1>

<h2 id="1-java"><font color="#A0D7EF">1. Java</font></h2>

<ul>
  <li>Java
    <ul>
      <li>JVM(Java Virtual Machine)을 이용하여 운영체제에 <span style="color:#B0ff66"><strong>독립적</strong></span>이다.</li>
      <li><span style="color:#B0ff66"><strong>객체지향언어</strong></span>(Object Oriented Programming, OOP), 유지보수가 쉽고 확장성이 높다.</li>
      <li><span style="color:#B0ff66"><strong>함수형</strong></span>프로그래밍 지원, 람다식 스트림을 지원한다.</li>
      <li><span style="color:#B0ff66"><strong>자동 메모리 관리</strong></span>(Garbage Collection)을 통해 사용되지 않는 메모리를 수거한다.</li>
    </ul>
  </li>
</ul>

<h2 id="2-jvmjava-virtual-machine"><font color="#A0D7EF">2. JVM(Java Virtual Machine)</font></h2>

<p align="center"><img src="https://arquivo.devmedia.com.br/artigos/Allan_Romanato/JavaVirtualMachine/JavaVirtualMachine2.jpg" height="250px" width="650px" /></p>

<ul>
  <li>JVM
    <ul>
      <li>자바 프로그램의 실행환경을 만들어주는 소프트웨어.</li>
      <li>컴파일러는 자바 언어를 JVM이 이해할 수 있는 바이트 코드로 변환한다.</li>
      <li>JVM은 바이트 코드를 운영체제에 맞는 기계어로 변환해준다.</li>
    </ul>
  </li>
</ul>

<h2 id="3-변수와variable-타입type"><font color="#A0D7EF">3. 변수와(Variable) 타입(Type)</font></h2>

<ul>
  <li>변수(Variable)
    <ul>
      <li>값이 변할 수 있는 데이터를 임시로 저장하기 위한  수단</li>
      <li>값을 저장할 수 있는 공간을 확보하고, 사람이 식별할 수 있는 이름을 붙인 것</li>
    </ul>
  </li>
  <li>상수(Constant)
    <ul>
      <li>변하지 말아야 할 데이터를 임시로 저장하기 위한 수단</li>
      <li>한번 할당하면 값을 변경할 수 없다</li>
    </ul>
  </li>
  <li>타입(Type)
    <ul>
      <li>타입을 통해 메모리 공간의 크기와, 값이 저장되는 방식이 결정된다</li>
      <li>값이 저장되는 방식에는 기본 타입, 참조 타입이 있다</li>
    </ul>
  </li>
  <li>리터럴(Literal)
    <ul>
      <li>문자가 가리키는 값 그 자체, 즉 값 = 리터럴</li>
      <li>float 타입의 변수의 리터럴에는 f의 접미사를 붙혀준다</li>
      <li>long 타입의 변수의 리터럴에는 L의 접미사를 붙혀준다</li>
    </ul>
  </li>
  <li>정수 타입
    <ul>
      <li>메모리 작은 순서대로 byte, short, int, long 4가지가 있다</li>
      <li>일반적으로 int를 많이 사용한다</li>
    </ul>
  </li>
  <li>실수 타입
    <ul>
      <li>메모리 작은 순서대로 float, double 2가지가 있다</li>
      <li>일반적으로 double를 많이 사용한다</li>
    </ul>
  </li>
  <li>논리 타입
    <ul>
      <li>참(True) 또는 거짓(False)을 저장할 수 있는 타입</li>
    </ul>
  </li>
  <li>문자 타입
    <ul>
      <li>문자 타입은 char 오직 하나이다</li>
      <li>문자형 리터럴을 작성할 때는 작은 따옴표(‘‘)를 사용해야한다</li>
      <li>변수에는 문자의 유니코드 숫자값이 저장된다.</li>
    </ul>
  </li>
  <li>문자열 타입
    <ul>
      <li>문자열은 앞선 기본 타입과 다르게 참조 타입(주소 저장 방법)이다</li>
      <li>직접 할당 방법을 이용하여 같은 문자열을 다른 변수에 저장해도 변수에 저장되는 주소값은 동일하다</li>
      <li>클래스의 인스턴스를 이용해 생성하는 방법은 같은 문자열이라도 주소가 다르다</li>
    </ul>
  </li>
</ul>

<p><br /></p>
<h1 id="-느낀점"><font color="#A0D7EF"> 느낀점</font></h1>
<hr />

<p>오늘은 Java 기본 문법을 공부하기 시작했다.<br />
Java에서 손을 뗀지 조금 돼서 다시 배운다는 생각으로 공부했다!!<br /><br />
파이썬으로 코딩테스트 준비를 하다보니까 자바가 불편하다는 생각이,,,,<br />
하지만 이제 개발 할 때는 자바로 코드를 짜야하니까<br />
앞으로 자바로 코딩테스트를 준비해면서 문법 실력을 늘려야겠다 생각했다.<br />
이번주도 화이팅하도록 하자!!<br /></p>]]></content><author><name>양재용</name><email>yjy850146@gmail.com</email></author><category term="Memoir" /><category term="Codestates" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">파이썬 백준 18870번 문제 풀이</title><link href="http://localhost:4000/baekjoon/baekJoon_18870/" rel="alternate" type="text/html" title="파이썬 백준 18870번 문제 풀이" /><published>2023-04-15T00:00:00+09:00</published><updated>2023-04-15T00:00:00+09:00</updated><id>http://localhost:4000/baekjoon/baekJoon_18870</id><content type="html" xml:base="http://localhost:4000/baekjoon/baekJoon_18870/"><![CDATA[<style> 
    p { line-height : 1.75em; }
    table { text-align : center; font-size : 1.5em; border: white;}
</style>

<h2 id="1-문제-분석"><font color="#A0D7EF">1. 문제 분석</font></h2>

<ol>
  <li><span style="color:#FFFF80">중복값 없이 좌표를 정렬한다.</span>
    <blockquote>
      <p>Set에 넣은 다음 Sorted 함수를 통해 정렬된 리스트를 받는다<br /></p>
    </blockquote>

    <p>정렬 된 모습</p>

    <table>
      <tbody>
        <tr>
          <td>sorted X</td>
          <td>-10</td>
          <td>-9</td>
          <td>4</td>
          <td>2</td>
        </tr>
        <tr>
          <td>X’</td>
          <td>0</td>
          <td>1</td>
          <td>2</td>
          <td>3</td>
        </tr>
      </tbody>
    </table>
  </li>
  <li><span style="color:#B0ff66">sorted X와 X’를 연결 해야한다.</span>
    <blockquote>
      <p>sorted X를 Key, X’를 Value로 넣은 딕셔너리를 만든다</p>
    </blockquote>
  </li>
</ol>

<h2 id="2-코드"><font color="#A0D7EF">2. 코드</font></h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="n">copy</span>
<span class="kn">import</span> <span class="n">sys</span>

<span class="n">compressed_X</span> <span class="o">=</span> <span class="nf">dict</span><span class="p">()</span> <span class="c1"># 압축 좌표를 저장할 딕셔너리
</span>
<span class="n">N</span> <span class="o">=</span> <span class="nf">int</span><span class="p">(</span><span class="nf">input</span><span class="p">())</span>

<span class="n">X</span> <span class="o">=</span> <span class="nf">list</span><span class="p">(</span><span class="nf">map</span><span class="p">(</span><span class="nb">int</span><span class="p">,</span> <span class="n">sys</span><span class="p">.</span><span class="n">stdin</span><span class="p">.</span><span class="nf">readline</span><span class="p">().</span><span class="nf">split</span><span class="p">()))</span>
<span class="n">copy_X</span> <span class="o">=</span> <span class="n">copy</span><span class="p">.</span><span class="nf">deepcopy</span><span class="p">(</span><span class="n">X</span><span class="p">)</span> <span class="c1"># 본래 좌표 순서가 저장된 배열
</span>
<span class="n">X</span> <span class="o">=</span> <span class="nf">sorted</span><span class="p">(</span><span class="nf">set</span><span class="p">(</span><span class="n">X</span><span class="p">))</span> <span class="c1"># 좌표를 집합에 넣어 중복값을 없애고, 정렬한다
</span>
<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="nf">len</span><span class="p">(</span><span class="n">X</span><span class="p">)):</span>
    <span class="n">compressed_X</span><span class="p">[</span><span class="n">X</span><span class="p">[</span><span class="n">i</span><span class="p">]]</span> <span class="o">=</span> <span class="n">i</span> <span class="c1"># 본래 좌표(key) 압축 좌표(value)로 딕셔너리에 저장한다
</span>
<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">copy_X</span><span class="p">:</span>
    <span class="nf">print</span><span class="p">(</span><span class="n">compressed_X</span><span class="p">[</span><span class="n">i</span><span class="p">],</span> <span class="n">end</span><span class="o">=</span><span class="s">' '</span><span class="p">)</span>

</code></pre></div></div>
<hr />

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">X</span> <span class="o">=</span> <span class="nf">sorted</span><span class="p">(</span><span class="nf">set</span><span class="p">(</span><span class="n">X</span><span class="p">))</span> <span class="c1"># 좌표를 집합에 넣어 중복값을 없애고, 정렬한다
</span></code></pre></div></div>
<p><span style="color:#FFFF80">중복값을 없앤 정렬된 X좌표를 구한다</span></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 중복값을 없앤 좌표(key), 압축 좌표(value)를 한 쌍으로 딕셔너리에 저장한다
</span><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="nf">len</span><span class="p">(</span><span class="n">X</span><span class="p">)):</span>
    <span class="n">compressed_X</span><span class="p">[</span><span class="n">X</span><span class="p">[</span><span class="n">i</span><span class="p">]]</span> <span class="o">=</span> <span class="n">i</span> 
</code></pre></div></div>
<p><span style="color:#B0ff66">sorted X를 Key, X’를 Value로 넣은 딕셔너리를 만든다</span></p>

<h2 id="3-총평"><font color="#A0D7EF">3. 총평</font></h2>
<p>문제의 해결 방법은 매우 빨리 찾았지만<br />
코드가 너무 길어지는 것 같아서<br />
짧게 코딩을 하려다 시간이 좀 걸린 것 같다.<br /><br />
파이썬은 깊은 복사를 하는게 매우 쉬운 것 같다.<br />
조만간 자바로 다시 돌아가야하는데<br />
잘 적응 할 수 있을지 걱정이다,,, ㅠㅜ</p>]]></content><author><name>양재용</name><email>yjy850146@gmail.com</email></author><category term="BaekJoon" /><category term="Coding" /><category term="Python" /><category term="Sort" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">코드스테이츠 백엔드 4일차 회고록</title><link href="http://localhost:4000/memoir/SEB_BE4/" rel="alternate" type="text/html" title="코드스테이츠 백엔드 4일차 회고록" /><published>2023-04-14T00:00:00+09:00</published><updated>2023-04-14T00:00:00+09:00</updated><id>http://localhost:4000/memoir/SEB_BE4</id><content type="html" xml:base="http://localhost:4000/memoir/SEB_BE4/"><![CDATA[<style> 
    p { line-height : 1.75em; }
    table { text-align : center; }
</style>

<h1 id="-배운점"><font color="#A0D7EF"> 배운점</font></h1>

<h2 id="1-git"><font color="#A0D7EF">1. Git</font></h2>

<ul>
  <li>Git
    <ul>
      <li>리누스 토르발스가 만든 버전 관리 시스템(VSC)</li>
      <li>파일의 변경 사항을 추적하며, 각 파일의 <span style="color:#B0ff66"><strong>버전을 관리</strong></span>할 수 있게 도와준다</li>
      <li><span style="color:#B0ff66"><strong>협업</strong></span>자들과 함께 파일을 공유하고, 취합 할 수 있게 도와준다</li>
    </ul>
  </li>
  <li>GitHub
    <ul>
      <li>Git을 사용하는 프로젝트를 지원하는 <span style="color:#FFFF80">웹 호스팅 서비스</span></li>
    </ul>
  </li>
</ul>

<h2 id="workflow"><font color="#A0D7EF">Workflow</font></h2>

<p align="center"><img src="https://cosimameyer.com/images/single-blog/git_flow.png" height="250px" width="650px" /></p>
<p><br /></p>

<ul>
  <li>Working Directory
    <ul>
      <li>현재 작업하고 있는 파일이 저장되어 있는 곳</li>
    </ul>
  </li>
  <li>Staging Area
    <ul>
      <li>commit하기 전에 변경된 파일을 저장하는 곳</li>
    </ul>
  </li>
  <li>Local Repository
    <ul>
      <li>내 컴퓨터에 있는 레퍼지토리</li>
    </ul>
  </li>
  <li>Remote Repository
    <ul>
      <li>서버에 있는 레퍼지토리</li>
    </ul>
  </li>
</ul>

<h3 id="-기본-명령어"><font color="#A0D7EF"> 기본 명령어</font></h3>
<hr />

<ul>
  <li><span style="color:#FFFF80"><code class="language-plaintext highlighter-rouge">git init</code></span>
    <ul>
      <li>현재 경로에 있는 파일을 Git으로 관리하기 시작한다</li>
    </ul>
  </li>
  <li><span style="color:#FFFF80"><code class="language-plaintext highlighter-rouge">git status</code></span>
    <ul>
      <li>파일들의 상태를 확인 할 수 있다.
        <ul>
          <li>Untracked - 파일이 추적되지 않는 상태</li>
          <li>Tracked - 파일이 추적되는 상태
            <ul>
              <li>Unmodified - 파일의 수정이 감지되지 않은 상태</li>
              <li>Modified - 파일이 수정이 감지된 상태</li>
              <li>Staged - 파일이 Stage Area에 저장 된 상태</li>
            </ul>
          </li>
        </ul>
      </li>
    </ul>
  </li>
  <li><span style="color:#FFFF80"><code class="language-plaintext highlighter-rouge">git add [파일명 || .]</code></span>
    <ul>
      <li>파일을 Stage Area로 보낸다</li>
    </ul>
  </li>
  <li><span style="color:#FFFF80"><code class="language-plaintext highlighter-rouge">git commit -[a | m || am] [메세지]</code></span>
    <ul>
      <li>Stage Area에 존재하는 파일을 Local Repository로 보낸다</li>
    </ul>
  </li>
  <li><span style="color:#FFFF80"><code class="language-plaintext highlighter-rouge">git log</code></span>
    <ul>
      <li>commit history를 확인 할 수 있다</li>
    </ul>
  </li>
  <li><span style="color:#FFFF80"><code class="language-plaintext highlighter-rouge">git push [remote repositroy 별명] [branch 이름]</code></span>
    <ul>
      <li>Local Repository의 branch를 Remote Repository로 보낸다</li>
    </ul>
  </li>
  <li><span style="color:#FFFF80"><code class="language-plaintext highlighter-rouge">git remote add [remote repository 별칭] [remote repository URL]</code></span>
    <ul>
      <li>현재 파일에 remote repository를 연결한다</li>
    </ul>
  </li>
  <li><span style="color:#FFFF80"><code class="language-plaintext highlighter-rouge">git clone [URL]</code></span>
    <ul>
      <li>현재 파일에 remot repository를 연결하면서, 코드를 복사한다</li>
    </ul>
  </li>
  <li><span style="color:#FFFF80"><code class="language-plaintext highlighter-rouge">git restore [파일명]</code></span>
    <ul>
      <li>Stage Area에 있는 파일을 되돌린다.</li>
    </ul>
  </li>
  <li><span style="color:#FFFF80"><code class="language-plaintext highlighter-rouge">git reset HEAD[^개수]</code></span>
    <ul>
      <li>commit한 내용을 취소한다(^=1, ^^=2)</li>
    </ul>
  </li>
</ul>

<p><br /></p>

<h1 id="-느낀점"><font color="#A0D7EF"> 느낀점</font></h1>
<hr />

<p>오늘은 Git, GitHub 사용법을 알아봤다!<br />
역시 Git, GitHub는 자주 해주지 않으면 금방 까먹게 된다,,,<br />
그래도 전에 알던 지식과 오늘 배웠던 지식을 합치니까<br />
어느정도 Git을 사용하는데 자신감이 붙게 됐다.<br /><br />
사실 IDE에 있는 GitHub 플러그인이 너무 잘 되어 있어서<br />
터미널에서 Git을 사용하는 법이,,,, 꼭 필요한가 의문이다.<br /><br />
오늘 많은 동기분들이 오류로 힘들어하는 모습을 보았는데<br />
사실 전공자도 Git이 Java보다 사용하기 까다롭다!!<br /><br />
편한 플러그인도 있으니까 다들 포기하지 말고<br />
함께 끝까지 달려갈 수 있으면 좋겠다!! <br /></p>]]></content><author><name>양재용</name><email>yjy850146@gmail.com</email></author><category term="Memoir" /><category term="Codestates" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">파이썬 백준 11478번 문제 풀이</title><link href="http://localhost:4000/baekjoon/baekJoon_11478/" rel="alternate" type="text/html" title="파이썬 백준 11478번 문제 풀이" /><published>2023-04-13T00:00:00+09:00</published><updated>2023-04-13T00:00:00+09:00</updated><id>http://localhost:4000/baekjoon/baekJoon_11478</id><content type="html" xml:base="http://localhost:4000/baekjoon/baekJoon_11478/"><![CDATA[<style> 
    p { line-height : 1.75em; }
</style>

<h2 id="1-문제-분석"><font color="#A0D7EF">1. 문제 분석</font></h2>

<ol>
  <li><span style="color:#FFFF80">집합에는 중복값을 넣을 수 없다</span>
    <blockquote>
      <p>부분 문자열의 값을 집합에 넣어준다.<br /></p>
    </blockquote>
  </li>
  <li><span style="color:#B0ff66">슬라이싱을 이용하여 부분 문자열을 만든다</span>
    <blockquote>
      <p><code class="language-plaintext highlighter-rouge">ababc, abab, aba, ab, a</code><br />
 <code class="language-plaintext highlighter-rouge">babc, bab, ba, b</code><br />
 <code class="language-plaintext highlighter-rouge">abc, ab, a</code><br />
 <code class="language-plaintext highlighter-rouge">bc, b</code><br />
 <code class="language-plaintext highlighter-rouge">c</code><br /><br />
 <code class="language-plaintext highlighter-rouge">[0:5] [0:4] [0:3] [0:2] [0:1]</code><br />
 <code class="language-plaintext highlighter-rouge">[1:5] [1:4] [1:3] [1:2]</code><br />
 <code class="language-plaintext highlighter-rouge">[2:5] [2:4] [2:3]</code><br />
 <code class="language-plaintext highlighter-rouge">[3:5] [3:4]</code><br />
 <code class="language-plaintext highlighter-rouge">[4:5]</code><br /><br /></p>
    </blockquote>
  </li>
</ol>

<h2 id="2-코드"><font color="#A0D7EF">2. 코드</font></h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="n">sys</span>

<span class="n">result</span> <span class="o">=</span> <span class="nf">set</span><span class="p">()</span> <span class="c1"># 부분 문자열이 들어갈 집합
</span>
<span class="n">S</span> <span class="o">=</span> <span class="n">sys</span><span class="p">.</span><span class="n">stdin</span><span class="p">.</span><span class="nf">readline</span><span class="p">().</span><span class="nf">strip</span><span class="p">()</span> <span class="c1"># 문자열을 입력받는다
</span>
<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="nf">len</span><span class="p">(</span><span class="n">S</span><span class="p">)):</span> <span class="c1"># 부분 문자열을 구한다
</span>    <span class="k">for</span> <span class="n">j</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="nf">len</span><span class="p">(</span><span class="n">S</span><span class="p">),</span> <span class="mi">0</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">):</span>
        <span class="k">if</span> <span class="n">i</span> <span class="o">&gt;=</span> <span class="n">j</span><span class="p">:</span>
            <span class="k">break</span>
        <span class="n">result</span><span class="p">.</span><span class="nf">add</span><span class="p">(</span><span class="n">S</span><span class="p">[</span><span class="n">i</span><span class="p">:</span><span class="n">j</span><span class="p">])</span>

<span class="nf">print</span><span class="p">(</span><span class="nf">len</span><span class="p">(</span><span class="n">result</span><span class="p">))</span>
</code></pre></div></div>
<p><br /></p>
<hr />

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">result</span> <span class="o">=</span> <span class="nf">set</span><span class="p">()</span> <span class="c1"># 부분 문자열이 들어갈 집합
</span></code></pre></div></div>
<p><span style="color:#FFFF80">서로 다른 부분 문자열은 중복값이 없기 때문에 집합에 값을 넣어준다</span></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="nf">len</span><span class="p">(</span><span class="n">S</span><span class="p">)):</span> <span class="c1"># 부분 문자열을 구한다
</span>    <span class="k">for</span> <span class="n">j</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="nf">len</span><span class="p">(</span><span class="n">S</span><span class="p">),</span> <span class="mi">0</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">):</span>
        <span class="k">if</span> <span class="n">i</span> <span class="o">&gt;=</span> <span class="n">j</span><span class="p">:</span>
            <span class="k">break</span>
        <span class="n">result</span><span class="p">.</span><span class="nf">add</span><span class="p">(</span><span class="n">S</span><span class="p">[</span><span class="n">i</span><span class="p">:</span><span class="n">j</span><span class="p">])</span>
</code></pre></div></div>

<p><span style="color:#B0ff66">슬라이싱을 이용해 부분 문자열을 집합에 넣는다</span></p>

<h2 id="3-총평"><font color="#A0D7EF">3. 총평</font></h2>
<p>문제의 키워드는 매우 쉽게 구할 수 있었지만<br />
부분 문자열을 어떻게 구하느냐에서 시간을 제일 많이 쓴 것 같다.<br /><br />
이중 for문을 이용해 배열을 탐색하는 부분이 약하다는 것을 알게되었고<br />
이 부분을 보완할 수 있도록 많은 문제들을 풀어봐야겠다고 생각했다.</p>]]></content><author><name>양재용</name><email>yjy850146@gmail.com</email></author><category term="BaekJoon" /><category term="Coding" /><category term="Python" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">코드스테이츠 백엔드 3일차 회고록</title><link href="http://localhost:4000/memoir/SEB_BE3/" rel="alternate" type="text/html" title="코드스테이츠 백엔드 3일차 회고록" /><published>2023-04-13T00:00:00+09:00</published><updated>2023-04-13T00:00:00+09:00</updated><id>http://localhost:4000/memoir/SEB_BE3</id><content type="html" xml:base="http://localhost:4000/memoir/SEB_BE3/"><![CDATA[<style> 
    p { line-height : 1.75em; }
    table { text-align : center; }
</style>

<h1 id="-배운점"><font color="#A0D7EF"> 배운점</font></h1>

<h2 id="1-cli-command-line-interface"><font color="#A0D7EF">1. CLI (Command Line Interface)</font></h2>

<ul>
  <li>CLI (Command Line Interface)
    <ul>
      <li>GUI보다 빠르고, 높은 안정성을 가짐</li>
      <li>서버 컴퓨터에 접근할 때 사용됨</li>
      <li>GUI보다 컴퓨터 자원을 덜 차지한다</li>
    </ul>
  </li>
  <li>GUI(Graphic User Interface)
    <ul>
      <li>PC(Personal Computer)에 사용되기에 유저에 친숙하고 편하다.</li>
      <li>여러개의 I/O장치를 통해 입출력 받을 수 있다.
<br /></li>
    </ul>
  </li>
</ul>

<p>백엔드 개발자는 서버를 다루기도 하기 때문에<br /> CLI에서 개발하는 환경에 익숙해질 필요가 있다.<br /><br /></p>

<h3 id="-기본-명령어"><font color="#A0D7EF"> 기본 명령어</font></h3>
<hr />

<ul>
  <li>Prompt
    <ul>
      <li>터미널 창 하단에 있는 한줄의 입력 공간</li>
    </ul>
  </li>
  <li>pwd
    <ul>
      <li>현재 경로를 확인 할 수 있는 명령어</li>
      <li><code class="language-plaintext highlighter-rouge">pwd</code></li>
    </ul>
  </li>
  <li>mkdir
    <ul>
      <li>새로운 폴더를 생성한다</li>
      <li><code class="language-plaintext highlighter-rouge">mkdir [파일명]</code></li>
    </ul>
  </li>
  <li>ls
    <ul>
      <li>현재 경로 하위에 있는 폴더와 파일을 나타낸다.</li>
      <li><code class="language-plaintext highlighter-rouge">ls [ -l | -a | -al | .. ]</code></li>
      <li>-[옵션]을 통해 여러가지 출력 방법을 이용 할 수 있다.</li>
    </ul>
  </li>
  <li>cd
    <ul>
      <li>명령어를 통해 폴더에 진입 할 수 있다.</li>
      <li><code class="language-plaintext highlighter-rouge">cd [경로]</code></li>
      <li>상대경로, 절대경로를 이용해서 폴더에 접근하면 된다.</li>
    </ul>
  </li>
  <li>touch
    <ul>
      <li>새로운 파일을 생성한다</li>
      <li><code class="language-plaintext highlighter-rouge">touch [파일 이름]</code></li>
    </ul>
  </li>
  <li>cat
    <ul>
      <li>파일의 내용을 출력한다</li>
      <li><code class="language-plaintext highlighter-rouge">cat [파일 이름]</code></li>
    </ul>
  </li>
  <li>rm
    <ul>
      <li>폴더나 파일을 삭제한다</li>
      <li><code class="language-plaintext highlighter-rouge">rm [폴더명 | 파일명]</code></li>
      <li>-[옵션]을 통해 여러가지 출력 방법을 이용 할 수 있다.</li>
    </ul>
  </li>
  <li>mv
    <ul>
      <li>폴더나 파일의 이름 변경, 또는 위치 이동</li>
      <li><code class="language-plaintext highlighter-rouge">mv [폴더명 | 파일명] [경로]</code> -&gt; 위치 이동</li>
      <li><code class="language-plaintext highlighter-rouge">mv [원래 폴더, 파일 명] [바뀔 폴더, 파일 명]</code> -&gt; 이름 변경</li>
    </ul>
  </li>
  <li>cp
    <ul>
      <li>폴더나 파일의 옮기거나 복사한다</li>
      <li><code class="language-plaintext highlighter-rouge">cp [원래 폴더명 | 파일명] [복사된 폴더명 | 파일명]</code></li>
    </ul>
  </li>
</ul>

<p><br /></p>

<h2 id="2-패키지와-패키지-매니저"><font color="#A0D7EF">2. 패키지와 패키지 매니저</font></h2>
<p>CLI 환경에서 패키지 매니저를 이용해서 패키지를 간단하게 다운 받을 수 있다<br />
우분투 환경에서는 apt, Mac Os 환경에서는 brew를 지원한다<br />
<code class="language-plaintext highlighter-rouge">패키지 -&gt; .zip파일</code><br />
<code class="language-plaintext highlighter-rouge">패키지 매니저 -&gt; 알집</code></p>

<p><br /></p>

<h2 id="3-사용권한"><font color="#A0D7EF">3. 사용권한</font></h2>

<p>파일이나 폴더는 사용권한을 가지고 있다.<br />
<code class="language-plaintext highlighter-rouge">chmod [ugo(number)] [폴더명 | 파일명]</code>를 통해 사용권한을 수정할 수 있다.<br />
u -&gt; user, g -&gt; group, o -&gt; other<br />
[ugo]는 Access class를 나타내고, 각 자리를 0~7로 설정할 수 있다.<br /></p>

<table>
  <thead>
    <tr>
      <th>number</th>
      <th>Sum</th>
      <th>rwx</th>
      <th>Permission</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>7</td>
      <td>4(r) + 2(w) + 1(x)</td>
      <td>rwx</td>
      <td>read, write, execute</td>
    </tr>
    <tr>
      <td>6</td>
      <td>4(r) + 2(w) + 0(-)</td>
      <td>rw-</td>
      <td>read, write</td>
    </tr>
    <tr>
      <td>5</td>
      <td>4(r) + 0(-) + 1(x)</td>
      <td>r-x</td>
      <td>read, execute</td>
    </tr>
    <tr>
      <td>4</td>
      <td>4(r) + 0(-) + 0(-)</td>
      <td>r–</td>
      <td>read</td>
    </tr>
    <tr>
      <td>3</td>
      <td>0(-) + 2(w) + 1(x)</td>
      <td>-wx</td>
      <td>write, execute</td>
    </tr>
    <tr>
      <td>2</td>
      <td>0(-) + 2(w) + 0(-)</td>
      <td>-w-</td>
      <td>write</td>
    </tr>
    <tr>
      <td>1</td>
      <td>0(-) + 0(-) + 1(x)</td>
      <td>–x</td>
      <td>execute</td>
    </tr>
    <tr>
      <td>0</td>
      <td>0(-) + 0(-) + 0(-)</td>
      <td>—</td>
      <td>none</td>
    </tr>
  </tbody>
</table>

<p><br /></p>

<h1 id="-느낀점"><font color="#A0D7EF"> 느낀점</font></h1>
<hr />

<p>오늘은 리눅스 환경에서 기본적으로 알아야 할 지식들을 배웠다.<br />
AWS 서버를 열 때 CLI환경에서 코딩해본 경험이 있어서<br />
어렵지는 않았지만, 그래도 이 영역은 배운 내용을 금방 잊어버려서<br />
할 때 마다 구글링을 열심히 하게 되는 것 같다.<br /><br />
Mac Os 패키지 매니져 brew에 대해서 알게 되었고,<br /> 
vi나 vim말고 nano라는 뉴비 친화적인 에디터가 있다는 것도 처음 알게 되었다.<br />
내일도 화이팅 하도록 하자!!<br /></p>]]></content><author><name>양재용</name><email>yjy850146@gmail.com</email></author><category term="Memoir" /><category term="Codestates" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">코드스테이츠 백엔드 2일차 회고록</title><link href="http://localhost:4000/memoir/SEB_BE2/" rel="alternate" type="text/html" title="코드스테이츠 백엔드 2일차 회고록" /><published>2023-04-12T00:00:00+09:00</published><updated>2023-04-12T00:00:00+09:00</updated><id>http://localhost:4000/memoir/SEB_BE2</id><content type="html" xml:base="http://localhost:4000/memoir/SEB_BE2/"><![CDATA[<style> 
    p { line-height: 1.75em; }
</style>

<h1 id="-배운점"><font color="#A0D7EF"> 배운점</font></h1>

<h2 id="1-컴퓨터와-프로그래밍이란"><font color="#A0D7EF">1. 컴퓨터와 프로그래밍이란?</font></h2>

<p>우리는 컴퓨터를 흔히 만능 머신이라고 생각한다.<br />
하지만 우리가 사용하는 많은 기능들은 프로그래머들이<br />
컴퓨터가 이해할 수 있게 프로그래밍 언어를 사용하여<br />
컴퓨터가 해야 할 행동들을 설정해놓은 것들이다.<br />
그렇기 때문에 컴퓨터 입장에서 생각하며 프로그래밍을 하는 연습을 해야한다.<br /><br /></p>

<h2 id="2-웹-서버와-클라이언트"><font color="#A0D7EF">2. 웹 서버와 클라이언트</font></h2>

<p align="center"><img src="https://user-images.githubusercontent.com/68217405/231431324-d276004c-0896-41cd-8641-0b98435e79e1.png" height="250px" width="450px" /></p>
<p><br />
간단하게 말하자면 클라이언트는 리소스를 사용하는 곳, 서버는 리소스를 제공하는 곳이다.<br /></p>
<ul>
  <li>클라이언트는 서버에 데이터를 보내며 서비스를 요청하고 <span style="color:#B0ff66"><strong>(request)</strong></span>,<br /></li>
  <li>서버는 DB영역에서 데이터를 저장 또는 조회 후 클라이언트에 응답한다 <span style="color:#B0ff66"><strong>(response)</strong></span><br /></li>
</ul>

<h2 id="3-html"><font color="#A0D7EF">3. HTML</font></h2>

<p align="center"><img src="https://upload.wikimedia.org/wikipedia/commons/thumb/6/61/HTML5_logo_and_wordmark.svg/440px-HTML5_logo_and_wordmark.svg.png" height="120px" width="240x" /></p>
<p><br />
HTML은 웹 페이지의 내용의 뼈대와 규칙을 기술하는 언어이다.<br />
웹 페이지의 가장 기초적인 부분이며, 여러가지 태그를 이용하여 구조를 나타낸다.<br /></p>
<ul>
  <li>&lt;div&gt;
    <ul>
      <li>콘텐츠의 길이와 상관없이 한 줄을 차지함</li>
      <li>section 사용 권장</li>
      <li>block 태그임으로 margin, padding 사용 가능</li>
    </ul>
  </li>
  <li>&lt;span&gt;
    <ul>
      <li>콘텐츠의 길이만큼 차지함</li>
      <li>줄바꿈 X</li>
      <li>inline 태그임으로 margin, padding 사용 불가</li>
    </ul>
  </li>
  <li>&lt;ul&gt;
    <ul>
      <li>Unordered Lists의 약자로, 순서가 없는 리스트이다</li>
    </ul>
  </li>
  <li>&lt;ol&gt;
    <ul>
      <li>Ordered Lists의 약자로, 순서가 있는 리스트이다</li>
    </ul>
  </li>
  <li>&lt;li&gt;
    <ul>
      <li>List의 약자로, ul 과 ol의 내부에 쓰이는 태그이다</li>
    </ul>
  </li>
  <li>&lt;input&gt;
    <ul>
      <li>HTML에서 사용자에게 데이터를 입력 받기위해 다양한 입력 방법을 제공해준다</li>
      <li>check box, radio box, text 등등 있다.</li>
    </ul>
  </li>
</ul>

<h2 id="4-css"><font color="#A0D7EF">4. CSS</font></h2>

<p align="center"><img src="https://i.namu.wiki/i/RsrvedqA4qJ3ZI8OJq2pmQosU4DzAtNQ0v1gdYUrioj7y9pO0cZZ8FMR19iZwSRhf8aEq0wUltfTr2oZhSTobbHT6pBPVnzt3E-8d_ngFWIioFubbfrYHzoLVdQ6OVM-3kH1uM6Sla8sbKDfSIDPQg.svg" height="90px" width="180x" /></p>
<p><br />
CSS는 웹 페이지에서 디자인을 적용하는데 사용되는 언어아다.<br />
CSS를 이용하여 더 나은 UI/UX를 제공한다.<br />
CSS 추가하는 방법은 총 3가지이다.</p>
<ol>
  <li>인라인 스타일
    <div class="language-css highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&lt;</span><span class="nt">span</span> <span class="nt">style</span><span class="o">=</span><span class="s1">"color:#FFFF80"</span><span class="o">&gt;**</span><span class="nt">한</span> <span class="nt">변의</span> <span class="nt">길이</span><span class="o">**&lt;/</span><span class="nt">span</span><span class="o">&gt;</span>
</code></pre></div>    </div>
  </li>
  <li>내부 스타일 시트
    <div class="language-css highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">\\</span><span class="o">&lt;</span><span class="nt">style</span><span class="o">&gt;</span>
     <span class="nt">body</span> <span class="p">{</span> <span class="nl">text-align</span><span class="p">:</span> <span class="nb">center</span><span class="p">;</span> <span class="p">}</span>
     <span class="nt">p</span> <span class="p">{</span> <span class="nl">background-color</span><span class="p">:</span> <span class="no">red</span><span class="p">;</span> <span class="p">}</span>
<span class="err">\\</span><span class="o">&lt;/</span><span class="nt">style</span><span class="o">&gt;</span>
</code></pre></div>    </div>
  </li>
  <li>외부 스타일 시트<br />
따로 .css파일을 생성해서 내부 스타일 시트처럼 작성한다.<br /><br /><br /></li>
</ol>

<h1 id="-느낀점"><font color="#A0D7EF"> 느낀점</font></h1>
<hr />

<p>대학교 때 배웠던 HTML, CSS, JS를 보니 반가운 기분이 들기도 했고<br />
한편으론 나는 24살 이후로 발전이 없는건가 서글픈 생각도 들었다.<br /><br />
하지만 수업을 들으면서 잊었던 지식들을 다시 배우기도 했고,<br />
짧은 시간 안에 대학교 때 배웠던 내용을 공부하는 것을 봤을 때<br />
뒤에 나올 Spring 프레임워크 부분이 기대됐다.<br /><br />
자만하지 말고 차근차근 기초부터 다시 쌓아가도록 하자!!</p>]]></content><author><name>양재용</name><email>yjy850146@gmail.com</email></author><category term="Memoir" /><category term="Codestates" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">코드스테이츠 백엔드 1일차 회고록</title><link href="http://localhost:4000/memoir/SEB_BE1/" rel="alternate" type="text/html" title="코드스테이츠 백엔드 1일차 회고록" /><published>2023-04-11T00:00:00+09:00</published><updated>2023-04-11T00:00:00+09:00</updated><id>http://localhost:4000/memoir/SEB_BE1</id><content type="html" xml:base="http://localhost:4000/memoir/SEB_BE1/"><![CDATA[<style> 
    p { line-height: 1.75em; }
</style>

<h1 id="-배운점"><font color="#A0D7EF"> 배운점</font></h1>

<h2 id="1-메타인지란-무엇인가"><font color="#A0D7EF">1. 메타인지란 무엇인가?</font></h2>

<p>메타인지란 현재 나의 인지 상태를 모니터링하는 능력이다.<br /><br />
내 방식대로 이해하자면 내가 무엇을 알고, 무엇을 모르는지<br />
정확히 판단 할 수 있는 것이 메타인지 능력인 것 같다.<br /><br />
어중간하게 아는 것이 제일 무서운 것이다. 라고 스스로 생각하기도 하고,<br />
전공생인 입장으로써 이미 배운 영역이 많이 나올테지만<br />
자만하지 않고 처음부터 다시 쌓는다는 마인드로 공부를 해야겠다고 생각했다.<br /><br /></p>

<h2 id="2-페어-프로그래밍이-무엇인가"><font color="#A0D7EF">2. 페어 프로그래밍이 무엇인가?</font></h2>

<p>페어 프로그래밍이란 말 그대로 동기와 함께 코딩을 하는 것으로,<br />
실무는 모두 협업으로 이루어지기 때문에<br />
페어 프로그래밍을 통해 미리 협업을 경험하는 것 같다.<br /><br />
대학교에서 프로젝트를 진행 해본 나는 코딩에서 협업 능력,<br />
커뮤니케이션 능력이 얼마나 중요한지 잘 알고 있다.<br /><br />
본인의 실력이 아무리 뛰어나도, 혼자서 할 수 있는 양에는<br />
한계가 있기 때문에 실무에서는 무조건 다른 사람과 함께 일을 하게 된다.<br /><br />
그렇기 때문에 페어 프로그래밍을 통해 나보다 실력이 낮은 사람,<br />
나보다 실력이 높은 사람들을 겪어보면서<br /> 
개발자의 역량을 발전시킬 수 있도록 노력해야겠다.<br /><br /></p>

<h2 id="3-나만의-학습-전략을-세우자"><font color="#A0D7EF">3. 나만의 학습 전략을 세우자!</font></h2>

<p>캘린더에 있는 일정 표를 보고, 오늘 확실히 알아가야 할 것들의 키워드를 작성하고,<br />
학습 목표를 참고하면서, 챕터별로 얼마나 이해했는지 확인하면서 공부 해야겠다고<br />
생각했다. 앞서 말했던 메타인지와 같은 맥락이다.<br /><br /></p>

<h1 id="-느낀점"><font color="#A0D7EF"> 느낀점</font></h1>
<p>오늘은 학습 관련 툴을 설치하거나, 앞으로의 교육 일정, 교육 방법에 관한<br />
OT느낌이 강했다.<br /><br />
전공자인 입장에서 오늘 크게 배운 점은 많이 없었다.<br />
그래도 혼자 공부하고, 고심하면서 배웠던 경험들이<br />
오늘 수업에서 강사님들이 주시는 팁과 유사하다는 것을 느끼고<br />
내가 그동안 해온 공부가 헛되지 않았다는 것을 느꼈다.<br /><br />
앞으로 전공자라고 자만하고, 방심하지 않고<br />
혼자 공부하느라 지쳤다고, 구글링으로 할 수 없는 단계라고,<br />
나보다 더 잘하는 사람들에게 배우고 싶다고 투정 부린 만큼<br />
다른분들 보다 더 질문하고, 공부해서 많은 것을 얻어 가야겠다고 생각했다.<br /></p>]]></content><author><name>양재용</name><email>yjy850146@gmail.com</email></author><category term="Memoir" /><category term="Codestates" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">파이썬 백준 2903번 문제 풀이</title><link href="http://localhost:4000/baekjoon/baekJoon_2903/" rel="alternate" type="text/html" title="파이썬 백준 2903번 문제 풀이" /><published>2023-04-06T00:00:00+09:00</published><updated>2023-04-06T00:00:00+09:00</updated><id>http://localhost:4000/baekjoon/baekJoon_2903</id><content type="html" xml:base="http://localhost:4000/baekjoon/baekJoon_2903/"><![CDATA[<h2 id="1-문제-분석">1. 문제 분석</h2>
<p><span style="color:#FFFF80"><strong>한 변의 길이</strong></span>는 1, 2, 4, 8 이런식으로 2의 배수 만큼 길어진다.<br /><br />
<span style="color:#B0ff66"><strong>한 변에 있는 원의 개수</strong></span>는 <span style="color:#FFFF80"><strong>한 변의 길이</strong></span> + 1 이다.<br /><br />
따라서 <span style="color:red"><strong>전체 원의 개수</strong></span>는  <span style="color:#B0ff66"><strong>한 변에 있는 원의 개수</strong></span> * 2<br /><br /></p>

<h2 id="2-코드">2. 코드</h2>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="n">math</span>

<span class="n">N</span> <span class="o">=</span> <span class="nf">int</span><span class="p">(</span><span class="nf">input</span><span class="p">())</span> <span class="c1"># N을 입력받는다
</span>
<span class="n">side</span> <span class="o">=</span> <span class="nf">int</span><span class="p">(</span><span class="n">math</span><span class="p">.</span><span class="nf">pow</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="n">N</span><span class="p">))</span> <span class="c1"># N번 이후의 변의 길이
</span>
<span class="n">side_point</span> <span class="o">=</span> <span class="n">side</span> <span class="o">+</span> <span class="mi">1</span> <span class="c1"># 한 변의 원의 개수
</span>
<span class="nf">print</span><span class="p">(</span><span class="n">side_point</span> <span class="o">*</span> <span class="n">side_point</span><span class="p">)</span>
</code></pre></div></div>
<p><br /></p>
<hr />

<h3 id="21-코드분석">2.1 코드분석</h3>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">side</span> <span class="o">=</span> <span class="nf">int</span><span class="p">(</span><span class="n">math</span><span class="p">.</span><span class="nf">pow</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="n">N</span><span class="p">))</span> <span class="c1"># N번 이후의 변의 길이
</span></code></pre></div></div>
<p>side 변수에 <span style="color:#FFFF80"><strong>한 변의 길이</strong></span>를 저장한다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">side_point</span> <span class="o">=</span> <span class="n">side</span> <span class="o">+</span> <span class="mi">1</span> <span class="c1"># 한 변의 원의 개수
</span></code></pre></div></div>
<p>side_point 변수에 <span style="color:#B0ff66"><strong>한 변에 있는 원의 개수</strong></span>를 저장한다.<br /></p>

<h2 id="3-총평">3. 총평</h2>
<p>문제 설명을 보면 되게 어렵게 보이지만, Solve.ac 브론즈 3 문제로<br />
규칙만 찾으면 간단하게 풀 수 있는 문제이다.<br /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nf">int</span><span class="p">(</span><span class="n">math</span><span class="p">.</span><span class="nf">pow</span><span class="p">(</span><span class="n">side_point</span><span class="p">,</span> <span class="mi">2</span><span class="p">))</span>
</code></pre></div></div>
<p>정답을 출력할 때, 이런 식으로 작성하게 되면<br />
double -&gt; int로 형 변환이 되면서 누락되는 부분이 있는지 정답처리가 되지 않는다.</p>]]></content><author><name>양재용</name><email>yjy850146@gmail.com</email></author><category term="BaekJoon" /><category term="Coding" /><category term="Python" /><summary type="html"><![CDATA[1. 문제 분석 한 변의 길이는 1, 2, 4, 8 이런식으로 2의 배수 만큼 길어진다. 한 변에 있는 원의 개수는 한 변의 길이 + 1 이다. 따라서 전체 원의 개수는 한 변에 있는 원의 개수 * 2]]></summary></entry></feed>